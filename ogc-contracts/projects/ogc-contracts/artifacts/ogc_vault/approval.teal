#pragma version 8
intcblock 0 1
bytecblock 0x636f6e7472696275746564 0x706175736564 0x676f616c 0x646561646c696e65 0x7265636569766572
txna ApplicationArgs 0
pushbytes 0x52735321 // "create(uint64,uint64,address)uint64"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x30c6d58a // "opt_in()void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x0178f94b // "pause()void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x1b529de8 // "unpause()void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xfe717b6d // "contribute(pay)void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x076bbd4d // "release()void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x23e629f7 // "refund()void"
==
bnz main_l8
err
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub refundcaster_14
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub releasecaster_13
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub contributecaster_12
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unpausecaster_11
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub pausecaster_10
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_9
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_8
intc_1 // 1
return

// create
create_0:
proto 3 1
intc_0 // 0
bytec_2 // "goal"
frame_dig -3
app_global_put
bytec_3 // "deadline"
frame_dig -2
app_global_put
bytec 4 // "receiver"
frame_dig -1
app_global_put
bytec_1 // "paused"
intc_0 // 0
app_global_put
global CurrentApplicationID
frame_bury 0
retsub

// opt_in
optin_1:
proto 0 0
txn Sender
bytec_0 // "contributed"
intc_0 // 0
app_local_put
retsub

// _not_paused
notpaused_2:
proto 0 0
bytec_1 // "paused"
app_global_get
intc_0 // 0
==
assert
retsub

// pause
pause_3:
proto 0 0
txn Sender
global CreatorAddress
==
assert
bytec_1 // "paused"
intc_1 // 1
app_global_put
retsub

// unpause
unpause_4:
proto 0 0
txn Sender
global CreatorAddress
==
assert
bytec_1 // "paused"
intc_0 // 0
app_global_put
retsub

// contribute
contribute_5:
proto 1 0
callsub notpaused_2
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
frame_dig -1
gtxns Amount
intc_0 // 0
>
&&
assert
txn Sender
bytec_0 // "contributed"
txn Sender
bytec_0 // "contributed"
app_local_get
frame_dig -1
gtxns Amount
+
app_local_put
retsub

// release
release_6:
proto 0 0
global Round
bytec_3 // "deadline"
app_global_get
>=
global CurrentApplicationAddress
balance
bytec_2 // "goal"
app_global_get
>=
&&
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
bytec 4 // "receiver"
app_global_get
itxn_field Receiver
global CurrentApplicationAddress
balance
pushint 1000000 // 1000000
-
itxn_field Amount
itxn_submit
retsub

// refund
refund_7:
proto 0 0
global Round
bytec_3 // "deadline"
app_global_get
>=
global CurrentApplicationAddress
balance
bytec_2 // "goal"
app_global_get
<
&&
assert
txn Sender
bytec_0 // "contributed"
app_local_get
store 0
load 0
intc_0 // 0
>
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
load 0
itxn_field Amount
itxn_submit
txn Sender
bytec_0 // "contributed"
intc_0 // 0
app_local_put
retsub

// create_caster
createcaster_8:
proto 0 0
intc_0 // 0
dupn 2
pushbytes 0x // ""
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
txna ApplicationArgs 3
frame_bury 3
frame_dig 1
frame_dig 2
frame_dig 3
callsub create_0
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// opt_in_caster
optincaster_9:
proto 0 0
callsub optin_1
retsub

// pause_caster
pausecaster_10:
proto 0 0
callsub pause_3
retsub

// unpause_caster
unpausecaster_11:
proto 0 0
callsub unpause_4
retsub

// contribute_caster
contributecaster_12:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
callsub contribute_5
retsub

// release_caster
releasecaster_13:
proto 0 0
callsub release_6
retsub

// refund_caster
refundcaster_14:
proto 0 0
callsub refund_7
retsub